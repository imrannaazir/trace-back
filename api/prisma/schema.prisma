 
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(uuid())
  email String @unique
  name String ?
  role Role @default(USER)
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  foundItem FoundItem[]
  lostItem LostItem[]
  claims Claim[]
  profile UserProfile?

  @@map("users")
}

enum Role {
  USER
  ADMIN
}



model UserProfile {
  id String @id @default(uuid())
  userId String @unique
  user   User?    @relation(fields: [userId], references: [id]) 
  name String 
  bio String?
  age Int?
  photo String?
  address String?
  phoneNumber String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("userProfiles")
}

model FoundItemCategory{
  id String @id @default(uuid())
  name String 
  foundItem FoundItem[]
  lostItem LostItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("foundItemCategories")
}

model FoundItem{
  id String @id @default(uuid())
  user    User     @relation(fields: [userId], references: [id])
  userId  String
  category FoundItemCategory @relation(fields:[categoryId],references: [id])
  categoryId String
  foundItemName String
  description String
  location String
  photo String?
  phoneNumber String
  foundDate DateTime
  emailAddress String
  claims Claim[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("foundItems")
}

model LostItem{
  id String @id @default(uuid())
  user User @relation(fields: [userId],references: [id])
  userId String
  category FoundItemCategory @relation(fields: [categoryId],references: [id])
  categoryId String
  lostItemName String
  description String
  location String
  photo String?
  phoneNumber String
  lostDate DateTime
  emailAddress String
  isFound Boolean @default(false)
   createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

@@map("lostItems")
}

model Claim{
  id String @id @default(uuid())
  userId String
  user User @relation(fields: [userId],references: [id])
  foundItemId String
  foundItem FoundItem @relation(fields: [foundItemId],references: [id])
  status Status @default(PENDING)
  distinguishingFeatures String
  photo String?
  lostDate DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("claims")
}

enum Status {
PENDING
APPROVED
REJECTED
}